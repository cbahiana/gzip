!function(e,t){"use strict";const r=e.Utils.merge;function n(e,r){const n=new Image;e.dataset.srcset!=t&&(n.srcset=e.dataset.srcset),n.decode!=t?(n.src=e.dataset.src,n.decode().then(function(){r.trigger("load",n,e)}).catch(function(){r.trigger("error",n)})):(n.onload=function(){r.trigger("load",n,e)},n.onerror=function(){r.trigger("error",n,e)},n.src=e.dataset.src,n.height>0&&n.height>0&&r.trigger("load",n,e))}function c(){this.trigger("complete")}e.images=r(Object.create(null),{lazy:function(t,o){const s=[].slice.apply((o&&o.container||document).querySelectorAll(t)),i=r(!0,Object.create(null),e.Event),a=new IntersectionObserver(function(e){let t,r,o=e.length;for(;o--;)(r=e[o]).isIntersecting&&(a.unobserve(r.target),-1!=(t=s.indexOf(r.target))&&s.splice(t,1),0==s.length&&i.on({"load:once":c,"fail:once":c}),n(r.target,i))},o);let g=s.length;for(;g--;)a.observe(s[g]);return i}})}(LIB);
