!function(){"use strict";const e=(e,t)=>t instanceof Response&&("cors"==t.type||new URL(e.url,self.origin).origin==self.origin)&&"GET"==e.method&&t.ok&&["default","cors","basic","navigate"].includes(t.type)&&!t.bodyUsed,t=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"],n=new class{async push(e){const n=await this.cloneRequestData(e),r=await this.getDB();return await r.put({id:function(e){var t,n=0;if(0===e.length)return n;for(t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return(+n).toString(16)}(e.url+t.map(async e=>{let t=n[e];return null==t?"":"headers"==e?t instanceof Headers?[...t.values()].filter(e=>null!=e).join(""):Object.values(t).map(t=>null!=n[e][t]?n[e][t]:"").join(""):"body"==e?await t.text():t}).join("")),lastRetry:Date.now()+864e5,url:e.url,request:n}),this}async cloneRequestData(e){const n={headers:{}};"GET"!==e.method&&(n.body=await e.clone().arrayBuffer());for(const[t,r]of e.headers.entries())n.headers[t]=r;for(const r of t)void 0!==e[r]&&(n[r]=e[r]);return"navigate"===n.mode&&(n.mode="same-origin"),n}async getDB(){return null==this.db&&(this.db=await async function(e,t="id",n=[]){return new Promise((r,o)=>{const a=indexedDB.open(e,1),s=`${e}_store`;let i;const l=(e,t,n=null,r=null)=>new Promise((o,a)=>{const l=t?"readonly":"readwrite";if(i.objectStoreNames.contains(s)){const t=i.transaction(s,l),c=t.objectStore(s);let u;"put"===e&&n&&void 0!==n.length?(u=t,n.forEach(e=>{c.put(e)})):(r&&c.index(r),u=c[e](n)),u.oncomplete=(e=>{o(e.target.result)}),u.onsuccess=(e=>{o(e.target.result)}),u.onerror=(e=>{a(e)})}else a(Error("Store not found"))}),c={count:()=>l("count",!0,keyToUse),get:(e,t)=>l("get",!0,e,t),getAll:(e,t)=>l("getAll",!0,e,t),put:e=>l("put",!1,e),delete:e=>l("delete",!1,e),clear:()=>l("clear",!1)};a.onupgradeneeded=(()=>{const e=(i=a.result).createObjectStore(s,{keyPath:t});let r;for(r of n)e.createIndex(r.name,r.key,r.options)}).bind(this),a.onsuccess=(()=>{i=a.result,r(c)}).bind(this),a.onerror=(e=>{o(Error(e.originalTarget&&e.originalTarget.error||e))}).bind(this)})}("gzip_sw_worker_sync_requests","id")),this.db}async replay(t){if("{SYNC_API_TAG}"!=t)return;const n=await this.getDB(),r=await n.getAll();r.length>0&&console.info("attempting to sync background requests ...");const o=await caches.open("{CACHE_NAME}");for(const t of r){let r=!1;try{console.info("attempting to replay background requests: ["+t.request.method+"] "+t.url);const n=new Request(t.url,t.request);let a=await o.match(n);(r=null!=a)||(r=null!=(a=await fetch(n.clone()))&&a.ok)&&e(n,a)&&await o.put(n,a)}catch(e){}!r&&t.lastRetry>Date.now()||await n.delete(t.id)}}};let r=0;function o(e,t=36e5){return 6e4*Math.min(t,.5*(2**e-1))}setTimeout(async function e(){await n.replay("{SYNC_API_TAG}"),setTimeout(e,o(++r))},o(r))}();
