var factory;factory=function(){"use strict";async function DB(e,t="id",r=[]){return new Promise((n,s)=>{const a=indexedDB.open(e,1),o=`${e}_store`;let i;const c=(e,t,r=null,n=null)=>new Promise((s,a)=>{const c=t?"readonly":"readwrite";if(i.objectStoreNames.contains(o)){const t=i.transaction(o,c),u=t.objectStore(o);let l;"put"===e&&r&&void 0!==r.length?(l=t,r.forEach(e=>{u.put(e)})):(n&&u.index(n),l=u[e](r)),l.oncomplete=(e=>{s(e.target.result)}),l.onsuccess=(e=>{s(e.target.result)}),l.onerror=(e=>{a(e)})}else a(new Error("Store not found"))}),u={count:()=>c("count",!0,keyToUse),get:(e,t)=>c("get",!0,e,t),getAll:(e,t)=>c("getAll",!0,e,t),put:e=>c("put",!1,e),delete:e=>c("delete",!1,e),clear:()=>c("clear",!1)};a.onupgradeneeded=(()=>{const e=(i=a.result).createObjectStore(o,{keyPath:t});let n;for(n of r)e.createIndex(n.name,n.key,n.options)}).bind(this),a.onsuccess=(()=>{i=a.result,n(u)}).bind(this),a.onerror=(e=>{s(new Error(e.originalTarget&&e.originalTarget.error||e))}).bind(this)})}const undef=null,Utils={implement(e){const t=e.prototype,r=[].slice.call(arguments,1);let n,s,a;function o(e,t,r){return function(){const n="previous"in this,s="parent"in this,a=this.previous,o=this.parent;this.previous=t,this.parent=r;const i=e.apply(this,arguments);return n&&(this.previous=a),s&&(this.parent=o),i}}for(n=0;n<r.length;n++)for(a in r[n])switch(typeof(s=r[n][a])){case"function":t[a]=o(s,e[a],t[a]);break;case"object":t[a]=merge(!0,Array.isArray(s)?[]:{},s);break;default:t[a]=s}return e},merge,reset,extendArgs:e=>(function(t){if("object"==typeof t){const r=[].slice.call(arguments,1);let n;for(n in t)e.apply(this,[n,t[n]].concat(r))}else e.apply(this,arguments);return this}),getAllPropertiesName(e){const t=[];let r,n,s,a=e;do{for(r=Object.getOwnPropertyNames(a),s=0;s<r.length;s++)n=r[s],-1===t.indexOf(n)&&t.push(n)}while(a=Object.getPrototypeOf(a));return t},getOwnPropertyDescriptorNames(e){let t=Object.keys(Object.getOwnPropertyDescriptors(e)),r=Object.getPrototypeOf(e);for(;r;)t=t.concat(Object.keys(Object.getOwnPropertyDescriptors(r))),r=Object.getPrototypeOf(r);return t},getObjectHash:e=>hashCode(getObjectHashString(e)).toString(16)};function getObjectHashString(e){let t,r,n,s,a="",o=0;if(!e&&"object"==typeof e||"string"==typeof e)a=""+("string"==e?JSON.stringify(e):e);else{const i=Utils.getOwnPropertyDescriptorNames(e);for(;o<i.length;o++){t=i[o];try{r=e[t]}catch(e){a+="!Error["+JSON.stringify(e.message)+"],";continue}if(a+=t+":",Array.isArray(r)){for(a+="[",s=0;s<r.length;s++)a+=getObjectHashString(r[s])+",";","==a[a.length-1]&&(a=a.substr(0,a.length-2)),a+="]"}else if("object"==typeof r)if(r&&"string"!=typeof r)if(null!=r[Symbol.iterator])if(r.constructor&&r.constructor.name&&(a+=r.constructor.name),"function"==typeof r.forEach)a+="{",r.forEach((e,t)=>a+=t+":"+getObjectHashString(e)+","),","==a[a.length-1]&&(a=a.substr(0,a.length-2)),a+="}";else{for(n of(a+="[",r))a+=getObjectHashString(n)+",";","==a[a.length-1]&&(a=a.substr(0,a.length-2)),a+="]"}else a+="{"+getObjectHashString(r)+"}";else a+=""+r;else a+=JSON.stringify(r);a+=","}","==a[a.length-1]&&(a=a.substr(0,a.length-2)),Array.isArray(e)?a="["+a+"]":"object"==typeof e&&(a="{"+a+"}")}return a}function hashCode(e){let t,r,n=0;if(0==e.length)return n;for(r=0;r<e.length;r++)n=(n<<5)-n+(t=e.charCodeAt(r)),n&=n;return n}function merge(e){const t=[].slice.call(arguments,1);let r,n,s,a,o="boolean"==typeof e;for(!0===o&&(o=e,e=t.shift()),r=0;r<t.length;r++)if((n=t[r])!=undef)for(s in n)switch(typeof(a=n[s])){case"object":e[s]=a!=undef&&o?merge(o,"object"==typeof e[s]&&e[s]!=undef?e[s]:Array.isArray(a)?[]:{},a):a;break;default:e[s]=a}return e}function reset(e){const t=Utils.getAllPropertiesName(e);let r,n,s=t.length;for(;s&&s--;)r=t[s],n=Object.getOwnPropertyDescriptor(e,r),e[r]!=undef&&"object"==typeof e[r]&&n!=undef&&"value"in n&&n.writable&&n.configurable&&(e[r]=merge(!0,Array.isArray(e[r])?[]:{},reset(e[r])));return e}const undef$1=null,extendArgs=Utils.extendArgs,Event={$events:{},$pseudo:{},on:extendArgs(function(e,t,r){const n=this;if(t==undef$1)return;let s,a;const o=e=e.toLowerCase(),i={fn:t,cb:t,name:e,original:e,parsed:[e]};if(-1!=e.indexOf(":")){const t=e.match(/([^:]+):([^(]+)(\(([^)]+)\))?/);t==undef$1?i.name=e=e.split(":",1)[0]:(i.original=e,i.name=t[1],i.parsed=t,e=t[1],t[2]in n.$pseudo&&n.$pseudo[t[2]](i))}e in n.$events||(n.$events[e]=[]),s=n.$events[e].length;for(;s&&s--;)if((a=n.$events[e][s]).fn==t&&a.original==o)return;Object.defineProperty(i,"sticky",{value:!!r}),n.$events[e].push(i)}),off:extendArgs(function(e,t,r){const n=this;let s,a;e=e.toLowerCase().split(":",1)[0];const o=n.$events[e];if(void 0!=o){for(r=!!r,a=o.length;a&&a--;)s=o[a],(void 0!=t||r)&&(s.fn!=t||s.sticky&&s.sticky!=r)||n.$events[e].splice(a,1);0==o.length&&delete n.$events[e]}}),trigger(e){e=e.toLowerCase();const t=this,r=arguments.length>1?[].slice.call(arguments,1):[],n=t.$events[e]||[];let s=0;for(;s<n.length;s++)n[s].cb.apply(t,r);return this},resolve(e){e=e.toLowerCase();const t=this,r=arguments.length>1?[].slice.call(arguments,1):[];return Promise.all((t.$events[e]||[]).concat().map(e=>new Promise(n=>{n(e.cb.apply(t,r))})))},addPseudo(e,t){return this.$pseudo[e]=t,this}};Event.addPseudo("once",function(e){return e.cb=function(){const t=e.fn.apply(this,arguments);return this.off(e.name,e.fn),t},this});const undef$2=null,CRY="ðŸ˜­";function normalize(e="GET"){return Array.isArray(e)||(e=[e]),e.forEach(e=>e==undef$2||"HEAD"==e?"GET":e.toUpperCase()),e}class Route{constructor(){this.routers=Object.create(undef$2),this.defaultRouter=Object.create(undef$2)}getRouter(e){const t=e!=undef$2&&e.request.method||"GET",r=this.routers[t]||[],n=r.length;let s,a=0;for(;n>a;a++)if((s=r[a]).match(e))return s;return this.defaultRouter[t]}registerRoute(e,t="GET"){return normalize(t).forEach(t=>{t in this.routers||(this.routers[t]=[]),this.routers[t].push(e)}),this}unregisterRoute(e,t){return normalize(t).forEach(t=>{const r=this.routers[t]||[],n=r.indexOf(e);-1!=n&&r.splice(n,1)}),this}setDefaultRouter(e,t){normalize(t).forEach(t=>this.defaultRouter[t]=e)}}Utils.merge(!0,Route.prototype,Event);class Router{constructor(e,t,r=null){const n=this;n.options=Object.assign(Object.create({plugins:[]}),r||{}),n.path=e,n.strategy=t.name,n.handler={handle:async e=>{let r,s,a,o;try{for(o of n.options.plugins)a=await o.precheck(e,s),s==undef$2&&a instanceof Response&&(s=a);if(s instanceof Response)return s;for(s of r=await n.resolve("beforeroute",e,s))if(s instanceof Response)return s}catch(e){console.error(CRY,e)}for(o of(s=await t.handle(e),r=await n.resolve("afterroute",e,s),n.options.plugins))await o.postcheck(e,s);for(a of r)if(a instanceof Response)return a;return s}}}}Utils.merge(!0,Router.prototype,Event);class RegExpRouter extends Router{match(e){const t=e.request.url;return/^https?:/.test(t)&&this.path.test(t)}}class ExpressRouter extends Router{constructor(e,t,r){super(e,t,r),this.url=new URL(e,self.origin)}match(e){const t=e.request.url,r=new URL(t);return/^https?:/.test(t)&&r.origin==this.url.origin&&0==r.pathname.indexOf(this.url.pathname)}}class CallbackRouter extends Router{match(e){return this.path(e.request.url,e)}}Router.RegExpRouter=RegExpRouter,Router.ExpressRouter=ExpressRouter,Router.CallbackRouter=CallbackRouter;const undef$3=null,SW=Object.create(undef$3),cacheName="{CACHE_NAME}";Utils.merge(!0,SW,Event),Object.defineProperties(SW,{app:{value:Object.create(undef$3)},routes:{value:new Route}}),Object.defineProperties(SW.app,{name:{value:"gzip",enumerable:!0},scope:{value:"{scope}",enumerable:!0},route:{value:"{ROUTE}",enumerable:!0},cacheName:{value:"{CACHE_NAME}",enumerable:!0},codeName:{value:"Page Optimizer Plugin",enumerable:!0},build:{value:"{VERSION}",enumerable:!0},buildid:{value:"26940ea",enumerable:!0},builddate:{value:"2019-07-03 08:24:30-04:00",enumerable:!0},urls:{value:"{CDN_HOSTS}",enumerable:!0},backgroundSync:{value:"{BACKGROUND_SYNC}",enumerable:!0},homepage:{value:"https://github.com/tbela99/gzip",enumerable:!0}});const CRY$1="ðŸ˜­",undef$4=null,expiration=Object.create(undef$4);class CacheExpiration{constructor(e){this.setOptions(e)}getRouteTag(e){const t=SW.app.route;let r;for(r of SW.app.urls)if(new RegExp("^https?://"+r+"/"+t+"/").test(e))return t;return undef$4}async setOptions(e){this.limit=+e.limit||0,this.maxAge=1e3*+e.maxAge||0;try{this.db=await DB(e.cacheName!=undef$4?e.cacheName:"gzip_sw_worker_expiration_cache_private","url",[{name:"url",key:"url"},{name:"version",key:"version"},{name:"route",key:"route"}])}catch(e){console.error(CRY$1,e)}}async precheck(e){try{if(this.db==undef$4)return!0;const t=Utils.getObjectHash(e.request),r=await this.db.get(e.request.url,"url"),n=await caches.open(cacheName);return r==undef$4||r.version==t&&r.timestamp>=Date.now()?await n.match(e.request):(e.request.url,caches.delete(e.request),!0)}catch(e){console.error(CRY$1,e)}return!0}async postcheck(e){if(this.db==undef$4)return!0;try{const t=e.request.url,r=await this.db.get(t,"url"),n=Utils.getObjectHash(e.request);return r==undef$4||r.version!=n||r.timestamp<Date.now()?(Date.now(),this.maxAge,new Date(Date.now()+this.maxAge).toUTCString(),await this.db.put({url:t,method:e.request.method,timestamp:Date.now()+this.maxAge,route:this.getRouteTag(t),version:n})):(r.timestamp,new Date(r.timestamp).toUTCString(),t)}catch(e){console.error(CRY$1,e)}return!0}}expiration.CacheExpiration=CacheExpiration;const isCacheableRequest=(e,t)=>t instanceof Response&&("cors"==t.type||new URL(e.url,self.origin).origin==self.origin)&&"GET"==e.method&&t.ok&&["default","cors","basic","navigate"].includes(t.type)&&!t.bodyUsed,map=new Map,undef$5=null,strategies={add:(e,t,r)=>map.set(e,{key:e,name:r==undef$5?e:r,handle:async e=>await t(e)}),keys:()=>map.keys(),values:()=>map.values(),entries:()=>map.entries(),get:e=>map.get(e),has:e=>map.has(e),delete:e=>map.delete(e),isCacheableRequest};async function cacheFirst(e){"use strict;";let t=await caches.match(e.request,{cacheName});if(null!=t)return t;if(t=await fetch(e.request),strategies.isCacheableRequest(e.request,t)){const r=t.clone();caches.open(cacheName).then(t=>t.put(e.request,r))}return t}async function cacheNetwork(e){"use strict;";const t=await caches.match(e.request,{cacheName}),r=fetch(e.request).then(t=>{if(strategies.isCacheableRequest(e.request,t)){const r=t.clone();caches.open(cacheName).then(t=>t.put(e.request,r))}return t}).catch(e=>{});return t||r}async function cacheOnly(e){return await caches.match(e.request,{cacheName})}async function networkFirst(e){"use strict;";try{const t=await fetch(e.request);if(null==t)throw new Error("Network error");if(strategies.isCacheableRequest(e.request,t)){const r=t.clone();caches.open(cacheName).then(t=>t.put(e.request,r))}return t}catch(e){}return caches.match(e.request,{cacheName})}async function networkOnly(e){return fetch(e.request)}function hashCode$1(e){var t,r=0;if(0===e.length)return r;for(t=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t),r|=0;return Number(r).toString(16)}strategies[Symbol.iterator]=(()=>map[Symbol.iterator]()),Object.defineProperty(strategies,"size",{get:()=>map.size}),strategies.add("cf",cacheFirst,"Cache fallback to Network"),strategies.add("cn",cacheNetwork,"Cache and Network Update"),strategies.add("co",cacheOnly,"Cache Only"),strategies.add("nf",networkFirst,"Network fallback to Cache"),strategies.add("no",networkOnly,"Network Only"),self.addEventListener("activate",e=>{e.waitUntil((async()=>{try{await SW.resolve("activate",e)}catch(e){console.error("ðŸ˜­",e)}return self.clients.claim()})())}),self.addEventListener("fetch",e=>{const t=SW.routes.getRouter(e);null!=t&&e.respondWith(t.handler.handle(e).then(t=>t instanceof Response?t:SW.routes.resolve("fail",e.request,t).then(()=>t)).catch(t=>(console.error("ðŸ˜­",t),fetch(e.request))))}),self.addEventListener("install",e=>{e.waitUntil((async()=>{try{await SW.resolve("install",e)}catch(e){console.error("ðŸ˜­",e)}return self.skipWaiting()})())});const cacheName$1="{CACHE_NAME}";let undef$6=null;const serializableProperties=["method","referrer","referrerPolicy","mode","credentials","cache","redirect","integrity","keepalive"];class SyncManager{async push(e){const t=await this.cloneRequestData(e),r=await this.getDB();return await r.put({id:hashCode$1(e.url+serializableProperties.map(async e=>{let r=t[e];return r==undef$6?"":"headers"==e?r instanceof Headers?[...r.values()].filter(e=>e!=undef$6).join(""):Object.values(r).map(r=>t[e][r]!=undef$6?t[e][r]:"").join(""):"body"==e?await r.text():r}).join("")),lastRetry:Date.now()+864e5,url:e.url,request:t}),this}async cloneRequestData(e){const t={headers:{}};"GET"!==e.method&&(t.body=await e.clone().arrayBuffer());for(const[r,n]of e.headers.entries())t.headers[r]=n;for(const r of serializableProperties)void 0!==e[r]&&(t[r]=e[r]);return"navigate"===t.mode&&(t.mode="same-origin"),t}async getDB(){return this.db==undef$6&&(this.db=await DB("gzip_sw_worker_sync_requests","id")),this.db}async replay(e){if("{SYNC_API_TAG}"!=e)return;const t=await this.getDB(),r=await t.getAll();r.length;const n=await caches.open(cacheName$1);for(const e of r){let r=!1;try{e.request.method,e.url;const t=new Request(e.url,e.request);let s=await n.match(t);(r=s!=undef$6)||(r=(s=await fetch(t.clone()))!=undef$6&&s.ok)&&isCacheableRequest(t,s)&&await n.put(t,s)}catch(e){}!r&&e.lastRetry>Date.now()||(e.lastRetry,Date.now(),await t.delete(e.id))}}}function serialize(e){const t=e.toString().trim();let r,n="",s="AsyncFunction"===Object.getPrototypeOf(e).constructor.name;const a=t.match(/^((class)|((async\s+)?function)?)\s*([^{(]*)[({]/);n=a[1];let o=a[5].trim().replace(/[\s(].*/,"");return r=n+" "+(""===o?e.name:o)+t.substring((n+(""===o?o:" "+o)).length),""===o&&(o=e.name),""===n&&(n="function"),{type:n,name:o,body:r,isAsync:s}}function script(serialized){return eval("(function () { return "+serialized.body+"})()")}const undef$7=null;class TaskManager{async run(e="{SYNC_API_TAG}"){const t=await this.getDB(),r=await t.getAll();for(const t of r)if(t.queueName,t.queueName==e){const e=script(t.data);t.isAsync?await e():e()}}async getDB(){return this.db==undef$7&&(this.db=await DB("gzip_sw_worker_sync_tasks","id")),this.db}async register(e,t="{SYNC_API_TAG}"){const r=serialize(e),n=await this.getDB();return await n.put({id:hashCode$1(JSON.stringify(r)),queueName:t,data:r})}async unregister(e){const t=await this.getDB();await t.delete(e.id)}}if(SW.app.backgroundSync.enabled){const e=new TaskManager,t=new SyncManager;SW.on({async install(){for(const e of["gzip_sw_worker_sync_requests","gzip_sw_worker_sync_tasks"]){const t=await DB(e,"id");null!=t&&await t.clear()}}}),SW.routes.on({fail(e,r){const n=SW.app.backgroundSync;if(0==n.length||-1!=n.method.indexOf(e.method)){const r=e.url.replace(self.origin,"");if(0==n.pattern.length||n.pattern.some(e=>0==r.indexOf(e)))return t.push(e)}}}),self.addEventListener("sync",function(r){r.tag,r.waitUntil(t.replay(r.tag).then(()=>e.run(r.tag)).catch(e=>console.error({error:e})))})}const undef$8=null,route=SW.routes,scope=SW.app.scope,cacheExpiryStrategy="{cacheExpiryStrategy}";let entry,option,defaultStrategy="{defaultStrategy}";for(entry of"{exclude_urls}")route.registerRoute(new Router.RegExpRouter(new RegExp(entry),strategies.get("no")));for(entry of"{network_strategies}")option=entry[2]||cacheExpiryStrategy,route.registerRoute(new Router.RegExpRouter(new RegExp(entry[1],"i"),strategies.get(entry[0]),option==undef$8?option:{plugins:[new expiration.CacheExpiration(option)]}));for(entry of strategies)route.registerRoute(new Router.ExpressRouter(scope+"/{ROUTE}/media/z/"+entry[0]+"/",entry[1]));strategies.has(defaultStrategy)||(defaultStrategy="no"),route.setDefaultRouter(new Router.ExpressRouter("/",strategies.get(defaultStrategy))),SW.on({error(e,t){console.error({error:e,event:t})},async install(){await caches.open(cacheName).then(async e=>{await e.addAll("{preloaded_urls}")})},async activate(){const e=await DB("gzip_sw_worker_config_cache_private","name"),t=await e.get("gzip");if(t!=undef$8&&"{ROUTE}"!=t.route){let e,t;for(e of"{STORES}")(t=await DB(e,"url",[{name:"url",key:"url"},{name:"version",key:"version"},{name:"route",key:"route"}]))!=undef$8&&t.clear()}await e.put(SW.app);const r=await caches.keys(),n=cacheName.split(/_/,2),s=2==n.length&&n[0]+"_";0!=s&&await Promise.all(r.map(e=>0==e.indexOf(s)&&e!=cacheName&&caches.delete(e)))}})},"function"==typeof define&&define.amd?define(factory):factory();
