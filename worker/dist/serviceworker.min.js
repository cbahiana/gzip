"use strict;";"{IMPORT_SCRIPTS}";const e=Object.create(null);let t;self,function(){function s(e){const r=!0===e,n=[].slice.call(arguments,1);let i,o,a,c;for(!0===r&&(e=n.shift()),i=0;i<n.length;i++){o=n[i];for(a in o)switch(typeof(c=o[a])){case"object":e[a]=1==r?s(r,c==t?c:Array.isArray(c)?[]:{},c):c;break;default:e[a]=c}}return e}function r(e){const i=n.getAllPropertiesName(e);let o,a,c=i.length;for(;c&&c--;)o=i[c],a=Object.getOwnPropertyDescriptor(e,o),e[o]!=t&&"object"==typeof e[o]&&a!=t&&"value"in a&&a.writable&&a.configurable&&(e[o]=s(!0,Array.isArray(e[o])?[]:{},r(e[o])));return e}const n={implement(e){function t(e,t,s){return function(){const r="previous"in this,n="parent"in this,i=this.previous,o=this.parent;this.previous=t,this.parent=s;const a=e.apply(this,arguments);return r&&(this.previous=i),n&&(this.parent=o),a}}const r=e.prototype,n=[].slice.call(arguments,1);let i,o,a;for(i=0;i<n.length;i++)for(a in n[i])switch(typeof(o=n[i][a])){case"function":r[a]=t(o,e[a],r[a]);break;case"object":r[a]=s(!0,Array.isArray(o)?[]:{},o);break;default:r[a]=o}return e},merge:s,reset:r,extendArgs:e=>(function(t){if("object"==typeof t){const s=[].slice.call(arguments,1);let r;for(r in t)e.apply(this,[r,t[r]].concat(s))}else e.apply(this,arguments);return this}),getAllPropertiesName(e){const t=[];let s,r,n,i=e;do{for(s=Object.getOwnPropertyNames(i),n=0;n<s.length;n++)r=s[n],-1===t.indexOf(r)&&t.push(r)}while(i=Object.getPrototypeOf(i));return t}};e.Utils=n}(),function(){const s=e.Utils,r=s.extendArgs,n={$events:{},$pseudo:{},promisify:r(function(e,s,r){if(s==t)return;let n,i;const o=e=e.toLowerCase(),a={fn:s,cb:s,name:e,original:e,parsed:[e]};if(-1!=e.indexOf(":")){const s=e.match(/([^:]+):([^(]+)(\(([^)]+)\))?/);s==t?a.name=e=e.split(":",1)[0]:(a.original=e,a.name=s[1],a.parsed=s,e=s[1],s[2]in this.$pseudo&&this.$pseudo[s[2]](a))}e in this.$events||(this.$events[e]=[]),n=this.$events[e].length;for(;n&&n--;)if((i=this.$events[e][n]).fn==s&&i.original==o)return;Object.defineProperty(a,"sticky",{value:!!r}),this.$events[e].push(a)}),off:r(function(e,t,s){let r,n;e=e.toLowerCase().split(":",1)[0];const i=this.$events[e];if(void 0!=i){for(s=!!s,n=i.length;n&&n--;)r=i[n],(void 0!=t||s)&&(r.fn!=t||r.sticky&&r.sticky!=s)||this.$events[e].splice(n,1);0==i.length&&delete this.$events[e]}}),resolve(e){e=e.toLowerCase();const t=this,s=arguments.length>1?[].slice.call(arguments,1):[];return Promise.all((t.$events[e]||[]).concat().map(function(e){return new Promise(function(r){r(e.cb.apply(t,s))})}))},addPseudo(e,t){return this.$pseudo[e]=t,this}};n.addPseudo("once",function(e){return e.cb=function(){const t=e.fn.apply(this,arguments);return this.off(e.name,e.fn),t},this}),e.PromiseEvent=n,s.merge(!0,e,n)}(),e.strategies=function(){const e=new Map,s={add:(t,s,r)=>e.set(t,{name:t,handle:async e=>{const t=await s(e);return e.request.mode,t}}),keys:()=>e.keys(),values:()=>e.values(),entries:()=>e.entries(),get:t=>e.get(t),has:t=>e.has(t),delete:t=>e.delete(t),isCacheableRequest:(e,s)=>("cors"==e.mode||new URL(e.url,self.origin).origin==self.origin)&&"GET"==e.method&&s!=t&&("basic"==s.type||"default"==s.type)&&s.ok&&!s.bodyUsed};return s[Symbol.iterator]=(()=>e[Symbol.iterator]()),Object.defineProperty(s,"size",{get:()=>e.size}),s}(),e.strategies.add("nf",async(s,r)=>{try{const r=await fetch(s.request);if(r==t)throw new Error("Network error");if(e.strategies.isCacheableRequest(s.request,r)){const e=r.clone();caches.open("{CACHE_NAME}").then(function(t){t.put(s.request,e)})}return r}catch(e){}return r.match(s.request)}),e.strategies.add("cf",async s=>{let r=await caches.match(s.request);if(r!=t)return r;if(r=await fetch(s.request),e.strategies.isCacheableRequest(s.request,r)){const e=r.clone();caches.open("{CACHE_NAME}").then(function(t){t.put(s.request,e)})}return r}),e.strategies.add("cn",async t=>{const s=await caches.match(t.request),r=fetch(t.request).then(function(s){if(e.strategies.isCacheableRequest(t.request,s)){const e=s.clone();caches.open("{CACHE_NAME}").then(function(s){s.put(t.request,e)})}return s});return s||r}),e.strategies.add("no",e=>fetch(e.request)),e.strategies.add("co",e=>caches.match(e.request)),function(e){function s(e){return e==t||"HEAD"==e?"GET":e.toLowerCase()}class r{constructor(){this.routes=Object.create(null),this.handlers=[],this.defaultHandler=Object.create(null)}getHandler(e,s){const r=s!=t&&s.request.method||"GET",n=this.routes[r]||[];let i,o=n.length;for(;o&&o--;)if((i=n[o]).match(e))return i.handler;return this.defaultHandler[r]}registerRoute(e,t){return(t=s(t))in this.routes||(this.routes[t]=[]),this.routes[t].push(e),this}unregisterRoute(e,t){t=s(t);const r=this.routes[t]||[],n=r.indexOf(e);return-1!=n&&r.splice(n,1),this}setDefaultHandler(e,t){this.defaultHandler[s(t)]=e}}class n{constructor(s,r){const n=this;e.Utils.reset(this),n.path=s,n.handler={handle:async e=>{let s,i,o=await n.resolve("beforeroute",e);for(s of o)if(s!=t&&s instanceof Response)return s;s=await r.handle(e),o=await n.resolve("afterroute",e,s);for(i of o)if(i!=t&&i instanceof Response)return i;return s}},n.promisify({beforeroute(e){"navigate"==e.request.mode&&[].slice.call(arguments)},afterroute(e,t){"navigate"==e.request.mode&&[].slice.call(arguments)}})}}e.Utils.merge(!0,n.prototype,e.PromiseEvent);const i=new r;r.RegExpRouter=class extends n{match(e){return/^https?:/.test(e)&&this.path.test(e)}},r.ExpressRouter=class extends n{constructor(e,t){super(e,t),this.url=new URL(e,self.origin)}match(e){const t=new URL(e);return/^https?:/.test(e)&&t.origin==this.url.origin&&0==t.pathname.indexOf(this.url.pathname)}},e.Router=r,e.router=i}(e);const s=e.strategies,r=e.Router,n=e.router,i=s.get("no");let o,a="{defaultStrategy}";n.setDefaultHandler(s.get(a));for(o of s)n.registerRoute(new r.ExpressRouter("{scope}/media/z/"+o[0]+"/",o[1]));"{exclude_urls}".forEach(e=>{n.registerRoute(new r.RegExpRouter(new RegExp(e),i))}),s.has(a)||(a="no"),self.addEventListener("install",function(e){e.waitUntil(caches.open("{CACHE_NAME}").then(function(e){return e.addAll("{preloaded_urls}")}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){e.waitUntil(self.clients.claim().then(function(){return caches.keys().then(function(e){const t="{CACHE_NAME}".split(/_/,2),s=2==t.length&&t[0]+"_";return Promise.all(e.map(e=>!1!==s&&0==e.indexOf(s)&&"{CACHE_NAME}"!=e&&caches.delete(e)))})}))}),self.addEventListener("fetch",s=>{const r=e.router.getHandler(s.request.url,s);r!=t&&s.respondWith(r.handle(s).catch(e=>(console.error("ðŸ˜­",e),fetch(s.request))))});
