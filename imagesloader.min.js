LIB.ready(function(e){function lazyload(){let e=LIB.images.lazy(".image-placeholder").on({load:function(e,t){null!=t.dataset.srcset&&(t.srcset=t.dataset.srcset),t.insertAdjacentHTML("beforebegin",'<span style="position:relative;display:inline-block"><span style="transition:opacity .2s ease-out;background:#fff;display:block;position:absolute;width:100%;height:100%;left:0;top:0"><span style="display:block;width:100%;height:100%;background:url(\''+t.src+"') 0 0 / cover no-repeat\">");const n=t.previousElementSibling;t.src=e.src,n.insertBefore(t,n.firstElementChild),setTimeout(function(){t.nextElementSibling.style.opacity=0,setTimeout(function(){n.parentElement.insertBefore(t,n),n.parentElement.removeChild(n)},250)},500)},complete:function(){e=null}})}if("IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype)"isIntersecting"in window.IntersectionObserverEntry.prototype||Object.defineProperty(window.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return this.intersectionRatio>0}}),lazyload();else{const e=document.createElement("script");e.onload=lazyload,e.defer=!0,e.async=!0,e.src="{script-src}",document.body.appendChild(e)}});